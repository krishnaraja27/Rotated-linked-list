Given a singly linked list of size N. The task is to left-shift the linked list by k nodes, where k is a given positive integer smaller than or equal to length of 
the linked list.

Example 1:

Input:
N = 5
value[] = {2, 4, 7, 8, 9}
k = 3
Output: 8 9 2 4 7
Explanation:
Rotate 1: 4 -> 7 -> 8 -> 9 -> 2
Rotate 2: 7 -> 8 -> 9 -> 2 -> 4
Rotate 3: 8 -> 9 -> 2 -> 4 -> 7

#######################################################Python code##########################################

'''

class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

'''


class Solution:
    
    #Function to rotate a linked list.
    def rotate(self, head, k):
        # code here
            
        # code here
        #take example number 1->2->3->4->->5->6
        curr = head#1
        second = head.next#2
        count = 1
        while count<k:#1<k k value is 3 just assume
            curr = curr.next#1->2->3
            second = second.next#4->5->6
            count+=1#increment 1
        if curr.next is None:#1->2->3

            return head #go back
        curr.next = None
        
        dummy = Node(0)#0
        tail = dummy#0
        first = head#1->2->3
        tail.next = second#->0->4->5->6
        temp = second#->4->5->6
        while temp and temp.next:
            temp = temp.next
        temp.next = first#0->4->5->6->1->2->3
        return dummy.next#4->5->6->1->2->3


